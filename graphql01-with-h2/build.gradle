plugins {
  id 'java'
  id 'org.springframework.boot' version '2.6.6'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'com.diffplug.spotless' version '5.11.0'
  id 'org.sonarqube' version '3.1.1'
  id 'jacoco'
  id 'org.asciidoctor.jvm.convert' version '3.3.1'
}

group = 'com.mingyuchoo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
  mavenCentral()
}

dependencies {
  // Spring Boot
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-devtools'
  // GraphQL
  implementation 'com.graphql-java:graphql-java:2021-02-17T06-17-55-6ffdd2d5'
  implementation 'com.graphql-java:graphql-java-extended-scalars:15.0.0'
  implementation 'com.graphql-java:graphql-java-spring-boot-starter-webmvc:2020-07-12T23-24-35-c6606f6'
  // implementation 'com.graphql-java-kickstart:graphql-spring-boot-starter:7.0.1'
  implementation 'com.graphql-java-kickstart:playground-spring-boot-starter:7.0.1'
  implementation 'com.graphql-java-kickstart:voyager-spring-boot-starter:7.0.1'
  implementation 'com.google.guava:guava:30.1-jre'
  // Lombok
  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  // Testing
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation('org.springframework.boot:spring-boot-starter-test:7.0.1') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  // Database
  runtimeOnly 'com.h2database:h2'
}

sonarqube {
  properties {
    property 'sonar.sourceEncoding', 'UTF-8'
  }
}

spotless {
  java {
    importOrder 'java', 'javax', 'org', 'com', ''
    removeUnusedImports()
    googleJavaFormat('1.7').aosp()
    target '**/*.java'
    endWithNewline()
    indentWithSpaces(4)
    trimTrailingWhitespace()
  }
  groovyGradle {
    target '**/*.gradle'
    greclipse().configFile('greclipse.properties')
    endWithNewline()
    indentWithSpaces(2)
    trimTrailingWhitespace()
  }
  format 'misc', {
    target '**/*.md', '**/.gitignore'
    endWithNewline()
    indentWithSpaces(2)
    trimTrailingWhitespace()
  }
}

jacoco {
  toolVersion = '0.8.6'
}

test {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
}

build {
  dependsOn 'spotlessApply'
}
